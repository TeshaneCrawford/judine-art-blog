---
import { getFolderContents, getImages } from '../utils/lib/cloudinary';
import { Image } from '@unpic/astro';
import Layout from '../layouts/GalleryLayout.astro';

interface Props {
  title: string;
  basePath: string;
  allowedFolders: string[];
}

const { title, basePath, allowedFolders } = Astro.props;

// Get root level contents
const { folders, images } = await getFolderContents();

// Filter folders
const filteredFolders = folders.filter((folder) =>
  allowedFolders.includes(folder.name)
);

// Get a preview image for each folder
const folderPreviews = await Promise.all(
  filteredFolders.map(async (folder) => {
    const folderImages = await getImages(folder.path);
    return {
      ...folder,
      previewImage: folderImages[0]?.url || null,
    };
  })
);
---

<style>
  /* Animated border styles for folder name */
  .folder-name {
    position: relative;
    padding: 0.5rem 2rem;
  }

  .folder-name::after {
    content: '';
    position: absolute;
    inset: 0;
    border: 1px solid transparent;
    border-radius: 0.15rem;
    transition: border-color 0.3s ease;
    pointer-events: none;
  }

  .group .folder-name::after {
    border-color: white;
  }

  @keyframes borderPulse {
    0% {
      border-color: rgba(255, 255, 255, 0.7);
    }
    50% {
      border-color: rgba(255, 255, 255, 1);
    }
    100% {
      border-color: rgba(255, 255, 255, 0.7);
    }
  }

  /* Underline animation for "View Album" */
  .animated-underline {
    position: relative;
    display: inline-block;
  }

  .animated-underline::after {
    content: '';
    position: absolute;
    width: 0;
    height: 1px;
    bottom: -2px;
    left: 0;
    background-color: white;
    transition: width 0.3s ease;
  }

  .group:hover .animated-underline::after {
    width: 100%;
  }
</style>

<Layout title={`${title} | Judine Art`}>
  <!-- Full-width Folders with Preview Images -->
  {
    folderPreviews.length > 0 && (
      <section class='mb-12 space-y-4'>
        {folderPreviews.map((folder) => (
          <a
            href={`/${basePath}/${folder.path}`}
            class='block w-full relative h-[32rem] rounded-sm overflow-hidden group'
          >
            {folder.previewImage ? (
              <Image
                src={folder.previewImage}
                alt={`Preview of ${folder.name}`}
                class='absolute inset-0 w-full h-full object-cover brightness-50 group-hover:brightness-75 dark:brightness-40 dark:group-hover:brightness-50 duration-300'
              />
            ) : (
              <div class='absolute inset-0 bg-gray-200 group-hover:bg-gray-300 transition-colors duration-300' />
            )}

            <div class='absolute inset-0 flex items-center justify-center'>
              <div class='text-center'>
                <span class='folder-name text-lg font-semibold text-white dark:text-gray-100 transition-transform duration-300 block'>
                  {folder.name.charAt(0).toUpperCase() + folder.name.slice(1)}
                </span>
                <span class='text-sm text-gray-200 dark:text-gray-300 mt-2 block animated-underline'>
                  View Album
                </span>
              </div>
            </div>
          </a>
        ))}
      </section>
    )
  }

  <!-- Recent Images Preview -->
  {
    images.length > 0 && (
      <section>
        <div class='flex justify-between items-center mb-6'>
          <h2 class='text-2xl font-bold dark:text-gray-100'>Recent Images</h2>
          <span class='text-sm text-gray-500 dark:text-gray-400'>
            Showing {Math.min(images.length, 12)} of {images.length}
          </span>
        </div>
        <div class='grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4'>
          {images.slice(0, 12).map((image) => (
            <div class='group relative overflow-hidden rounded-sm bg-gray-100 dark:bg-gray-800'>
              <Image
                src={image.url}
                alt={image.public_id.split('/').pop()}
                class='object-cover w-full h-full transform group-hover:scale-105 transition-transform duration-300'
                loading='lazy'
              />
              <div class='absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-20 dark:group-hover:bg-opacity-30 transition-opacity duration-300' />
            </div>
          ))}
        </div>
      </section>
    )
  }
</Layout>
